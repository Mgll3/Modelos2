# -*- coding: utf-8 -*-
"""Copia de Clasificación de la probabilidad de ocurrencia de ataque cardiaco.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KYWzFMpyBwYk3WLL1aEoDWRWYb8nt67m

# Clasificación de la probabilidad de ocurrencia de ataque cardiaco
"""

import numpy as np
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/heart.csv")

from sklearn.model_selection import train_test_split, cross_validate
from xgboost import XGBClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score, precision_score, recall_score

from sklearn.metrics import classification_report
from sklearn.model_selection import cross_val_score

df_copy.head()

df_copy = df.copy()
y = df_copy["output"]
X = df_copy.drop("output", axis=1)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)
model = XGBClassifier(random_state=17, eval_metric='logloss')
model.fit(X_train, y_train)           #Entrenamiento del modelo

cv_results = cross_validate(model, X_train, y_train, cv=10, scoring=['accuracy', 'f1', 'roc_auc', 'precision', 'recall'])
print('Validacion Cruzada: Entrenamiento')
print(f'Accuracy: {round(cv_results["test_accuracy"].mean(), 4)}')
print(f'Auc: {round(cv_results["test_roc_auc"].mean(), 4)}')
print(f'Recall: {round(cv_results["test_recall"].mean(), 4)}')
print(f'Precision: {round(cv_results["test_precision"].mean(), 4)}')
print(f'F1: {round(cv_results["test_f1"].mean(), 4)}')

y_pred = model.predict(X_test)        #Predecir con test
print('Test:')
print("Accuracy:", round(accuracy_score(y_test, y_pred), 4))
print("F1 Score:", round(f1_score(y_test, y_pred), 4))
print("ROC AUC Score:", round(roc_auc_score(y_test, y_pred), 4))
print("Precision:", round(precision_score(y_test, y_pred), 4))
print("Recall:", round(recall_score(y_test, y_pred), 4))